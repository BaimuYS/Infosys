<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shuxiajian.frame.mapper.RoleMapper">
  <resultMap id="RoleResultMap" type="com.shuxiajian.frame.domain.Role">
    <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
    <collection property="menuList" ofType="com.shuxiajian.frame.domain.Menu" fetchType="lazy"
                javaType="ArrayList" column="ROLE_ID" select="com.shuxiajian.frame.mapper.MenuMapper.selectMenuListByRoleId">
      <id column="MENU_ID" jdbcType="VARCHAR" property="menuId" />
      <result column="NAME" jdbcType="VARCHAR" property="name" />
      <result column="URL" jdbcType="VARCHAR" property="url" />
      <result column="PAR_MENU_ID" jdbcType="VARCHAR" property="parMenuId" />
      <result column="MENU_ORDER" jdbcType="INTEGER" property="menuOrder" />
      <result column="ICON_CLASS" jdbcType="VARCHAR" property="iconClass" />
    </collection>

    <collection property="userList" ofType="com.shuxiajian.frame.domain.User" fetchType="lazy"
                javaType="ArrayList" column="ROLE_ID" select="com.shuxiajian.frame.mapper.RoleMapper.selectUserListByRoleId">
      <id column="USERNAME" property="username" jdbcType="VARCHAR" />
      <result column="EMP_ID" property="empId" jdbcType="VARCHAR" />
      <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
      <result column="LOGIN_COUNT" property="loginCount" jdbcType="INTEGER" />
      <result column="LAST_TIME" property="lastTime" jdbcType="TIMESTAMP" />
      <!--用户与员工的一对一映射关系:association-->
      <association property="employee" javaType="com.shuxiajian.frame.domain.Employee">
        <id column="EMP_ID" property="empId" jdbcType="VARCHAR" />
        <result column="DEPT_ID" property="deptId" jdbcType="VARCHAR" />
        <result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
        <result column="CUST_ID" property="custId" jdbcType="VARCHAR" />
        <result column="BRANCH_ID" property="branchId" jdbcType="VARCHAR" />
        <result column="EMAIL" property="email" jdbcType="VARCHAR" />
        <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
        <result column="TEL" property="tel" jdbcType="VARCHAR" />
        <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
        <result column="ID_CARD" property="idCard" jdbcType="VARCHAR" />
        <result column="SEX" property="sex" jdbcType="VARCHAR" />
        <result column="IN_DT" property="inDt" jdbcType="DATE" />
        <result column="OUT_DT" property="outDt" jdbcType="DATE" />
      </association>
    </collection>
  </resultMap>

  <resultMap id="RoleBaseResultMap" type="com.shuxiajian.frame.domain.Role">
    <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
  </resultMap>
  <!--用户属性表-->
  <resultMap id="UserResultMap" type="com.shuxiajian.frame.domain.User" >
    <id column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="EMP_ID" property="empId" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="LOGIN_COUNT" property="loginCount" jdbcType="INTEGER" />
    <result column="LAST_TIME" property="lastTime" jdbcType="TIMESTAMP" />
    <!--与员工的一对一映射关系:association-->
    <association property="employee" javaType="com.shuxiajian.frame.domain.Employee">
      <id column="EMP_ID" property="empId" jdbcType="VARCHAR" />
      <result column="DEPT_ID" property="deptId" jdbcType="VARCHAR" />
      <result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
      <result column="CUST_ID" property="custId" jdbcType="VARCHAR" />
      <result column="BRANCH_ID" property="branchId" jdbcType="VARCHAR" />
      <result column="EMAIL" property="email" jdbcType="VARCHAR" />
      <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
      <result column="TEL" property="tel" jdbcType="VARCHAR" />
      <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
      <result column="ID_CARD" property="idCard" jdbcType="VARCHAR" />
      <result column="SEX" property="sex" jdbcType="VARCHAR" />
      <result column="IN_DT" property="inDt" jdbcType="DATE" />
      <result column="OUT_DT" property="outDt" jdbcType="DATE" />
    </association>
  </resultMap>


  <sql id="Base_Column_List">
    ROLE_ID, ROLE_NAME, ROLE_DESC
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="RoleResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shuxiajian.frame.domain.Role">
    insert into tb_role (ROLE_ID, ROLE_NAME, ROLE_DESC
      )
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shuxiajian.frame.domain.Role">
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="roleDesc != null">
        ROLE_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shuxiajian.frame.domain.Role">
    update tb_role
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shuxiajian.frame.domain.Role">
    update tb_role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <select id="queryRoleListSelectiveByPage" parameterType="map" resultMap="RoleResultMap">
    select * from tb_role
    <where>
      <if test="roleId != null and roleId != ''">
        and ROLE_ID = #{roleId,jdbcType=VARCHAR}
      </if>
      <if test="roleName != null and roleName != ''">
        and ROLE_NAME = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleDesc != null and roleDesc != ''">
        and ROLE_DESC = #{roleDesc,jdbcType=VARCHAR}
      </if>
    </where>
    order by ${sort} ${sortOrder}
  </select>
  <select id="queryRoleListSelective" parameterType="map" resultMap="RoleBaseResultMap">
    select * from tb_role
    <where>
      <if test="roleId != null and roleId != ''">
        and ROLE_ID = #{roleId,jdbcType=VARCHAR}
      </if>
      <if test="roleName != null and roleName != ''">
        and ROLE_NAME = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleDesc != null and roleDesc != ''">
        and ROLE_DESC = #{roleDesc,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="getCountSelective" parameterType="map" resultType="java.lang.Integer">
    select count(1) from tb_role
    <where>
      <if test="roleId != null and roleId != ''">
        and ROLE_ID = #{roleId,jdbcType=VARCHAR}
      </if>
      <if test="roleName != null and roleName != ''">
        and ROLE_NAME = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleDesc != null and roleDesc != ''">
        and ROLE_DESC = #{roleDesc,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <insert id="saveMenuListOfRoleId">
    insert into tb_role_menu (role_id,menu_id) values
    <foreach collection="arrMenuIdList" item="item" index="index" separator = ",">
      (#{roleId,jdbcType=VARCHAR},#{item,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <delete id="deleteMenuListOfRoleId">
    delete from tb_role_menu where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>

  <insert id="saveUserListOfRoleId">
    insert into tb_user_role (role_id,username) values
    <foreach collection="arrUserIdList" item="item" index="index" separator = ",">
      (#{roleId,jdbcType=VARCHAR},#{item,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <delete id="deleteUserListOfRoleId">
    delete from tb_user_role where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>

  <select id="getUserCountOfRoleId" parameterType="map" resultType="java.lang.Integer">
    select count(1) from tb_user_role
    <where>
      <if test="roleId != null and roleId != ''">
        and ROLE_ID = #{roleId,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectUserListByRoleId" parameterType="java.lang.String" resultMap="UserResultMap">
    select
    t1.USERNAME,T1.EMP_ID,T1.PASSWORD,T1.LOGIN_COUNT,T1.LAST_TIME,
    T2.DEPT_ID,T2.EMP_NAME,T2.CUST_ID,T2.BRANCH_ID,T2.EMAIL,T2.MOBILE,T2.TEL,T2.ADDRESS,T2.ID_CARD,T2.SEX,T2.IN_DT,T2.OUT_DT
    from tb_user t1,tb_employee t2
    where t1.emp_id = t2.emp_id and username in (
    select username from tb_user_role where role_id = #{roleId,jdbcType=VARCHAR}
    )
  </select>

  <select id="queryUserListOfRoleIdByPage" parameterType="java.lang.String" resultMap="UserResultMap">
    select
    t1.USERNAME,T1.EMP_ID,T1.PASSWORD,T1.LOGIN_COUNT,T1.LAST_TIME,
    T2.DEPT_ID,T2.EMP_NAME,T2.CUST_ID,T2.BRANCH_ID,T2.EMAIL,T2.MOBILE,T2.TEL,T2.ADDRESS,T2.ID_CARD,T2.SEX,T2.IN_DT,T2.OUT_DT
    from tb_user_role t3 left outer join tb_user t1 on t3.username = t1.username
    left outer join tb_employee t2 on t1.emp_id = t2.emp_id
    <where>
      t3.role_id = #{roleId,jdbcType=VARCHAR}
    </where>
    order by ${sort} ${sortOrder}
  </select>
</mapper>